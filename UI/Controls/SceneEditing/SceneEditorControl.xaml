<UserControl x:Class="Macabre2D.UI.Controls.SceneEditing.SceneEditorControl"
             x:Name="_sceneEditorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:common="clr-namespace:Macabre2D.UI.Common;assembly=Macabre2D.UI.Common"
             xmlns:controls="clr-namespace:Macabre2D.UI.Controls"
             xmlns:converters="clr-namespace:Macabre2D.UI.Converters;assembly=Macabre2D.UI.Converters"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:valueEditors="clr-namespace:Macabre2D.UI.Controls.ValueEditors"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <UserControl.Resources>
        <converters:EqualityToBoolConverter x:Key="_equalityToBoolConverter" />
        <converters:InverseBoolConverter x:Key="_inverseBoolConverter" />
    </UserControl.Resources>
    <Grid DataContext="{Binding ElementName=_sceneEditorControl}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0"
                    Orientation="Horizontal"
                    Margin="{StaticResource StandardMarginB}">
            <controls:IconToggleButton IsToggled="{Binding MonoGameService.ShowGrid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.Grid}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.GridOff}"
                                       Margin="{StaticResource StandardMarginTRB}"
                                       ToolTip="Toggle the grid within the scene editor." />

            <controls:IconToggleButton IsToggled="{Binding MonoGameService.ShowSelection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.Selection}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.SelectionOff}"
                                       Margin="{StaticResource StandardMarginAll}"
                                       ToolTip="Toggle highlighting the current selected component's collider and bounding area in the scene editor." />

            <Button Command="{Binding CenterCameraCommand, ElementName=_sceneEditorControl}"
                    ToolTip="Center the current camera to (0, 0)">
                <iconPacks:PackIconMaterial Kind="{x:Static iconPacks:PackIconMaterialKind.ImageFilterCenterFocus}"
                                            Foreground="{StaticResource BlackBrush}" />
            </Button>

            <Separator HorizontalAlignment="Center"
                       VerticalAlignment="Stretch" />

            <controls:IconToggleButton IsToggled="{Binding MonoGameService.SelectedGizmo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource _equalityToBoolConverter}, ConverterParameter={x:Static common:GizmoType.Translation}}"
                                       IsHitTestVisible="{Binding IsToggled, RelativeSource={RelativeSource Self}, Converter={StaticResource _inverseBoolConverter}}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.Triangle}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.TriangleOutline}"
                                       Margin="{StaticResource StandardMarginAll}"
                                       ToolTip="Translation Gizmo" />

            <controls:IconToggleButton IsToggled="{Binding MonoGameService.SelectedGizmo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource _equalityToBoolConverter}, ConverterParameter={x:Static common:GizmoType.Scale}}"
                                       IsHitTestVisible="{Binding IsToggled, RelativeSource={RelativeSource Self}, Converter={StaticResource _inverseBoolConverter}}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.Square}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.SquareOutline}"
                                       Margin="{StaticResource StandardMarginAll}"
                                       ToolTip="Scale Gizmo" />

            <controls:IconToggleButton IsToggled="{Binding MonoGameService.SelectedGizmo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource _equalityToBoolConverter}, ConverterParameter={x:Static common:GizmoType.None}}"
                                       IsHitTestVisible="{Binding IsToggled, RelativeSource={RelativeSource Self}, Converter={StaticResource _inverseBoolConverter}}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.EyeOff}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.EyeOffOutline}"
                                       Margin="{StaticResource StandardMarginAll}"
                                       ToolTip="Hides all gizmos." />

            <Separator HorizontalAlignment="Center"
                       VerticalAlignment="Stretch" />

            <valueEditors:ColorEditor Title="Background"
                                      ToolTip="Change the current scene's background color."
                                      Width="200"
                                      Value="{Binding SceneService.CurrentScene.BackgroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>

        <ContentControl Grid.Row="1"
                        Content="{Binding MonoGameService.EditorGame}" />
    </Grid>
</UserControl>
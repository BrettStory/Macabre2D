<UserControl x:Class="Macabre2D.UI.Library.Controls.SceneEditing.SceneEditorControl"
             x:Name="_sceneEditorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:Macabre2D.UI.Library.Controls"
             xmlns:converters="clr-namespace:Macabre2D.UI.Library.Converters"
             xmlns:framework="clr-namespace:Macabre2D.Framework;assembly=Macabre2D.Framework"
             xmlns:frameworkWrappers="clr-namespace:Macabre2D.UI.Library.Models.FrameworkWrappers"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:valueEditors="clr-namespace:Macabre2D.UI.Library.Controls.ValueEditors">
    <UserControl.Resources>
        <converters:ComponentWrapperEditingStyleToVisibilityConverter x:Key="_editingStyleConverter" />
        <converters:EqualityToBoolConverter x:Key="_equalityToBoolConverter" />
        <converters:InverseBoolConverter x:Key="_inverseBoolConverter" />
    </UserControl.Resources>
    <Grid DataContext="{Binding ElementName=_sceneEditorControl}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0"
                    Orientation="Horizontal"
                    Margin="{StaticResource StandardMarginLTB}">
            <controls:IconToggleButton IsToggled="{Binding MonoGameService.ShowGrid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.Grid}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.GridOff}"
                                       Margin="{StaticResource StandardMarginTRB}"
                                       ToolTip="Toggle the grid within the scene editor." />

            <controls:IconToggleButton IsToggled="{Binding MonoGameService.ShowSelection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.Selection}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.SelectionOff}"
                                       Margin="{StaticResource StandardMarginAll}"
                                       ToolTip="Toggle highlighting the current selected component's collider and bounding area in the scene editor." />

            <Button Command="{Binding CenterCameraCommand, ElementName=_sceneEditorControl}"
                    ToolTip="Center the current camera to (0, 0)">
                <iconPacks:PackIconMaterial Kind="{x:Static iconPacks:PackIconMaterialKind.ImageFilterCenterFocus}"
                                            Foreground="{StaticResource BlackBrush}" />
            </Button>

            <Separator HorizontalAlignment="Center"
                       VerticalAlignment="Stretch" />

            <controls:IconToggleButton IsToggled="{Binding MonoGameService.EditingStyle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource _equalityToBoolConverter}, ConverterParameter={x:Static frameworkWrappers:ComponentEditingStyle.Translation}}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.Triangle}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.TriangleOutline}"
                                       IsHitTestVisible="{Binding IsToggled, RelativeSource={RelativeSource Self}, Converter={StaticResource _inverseBoolConverter}}"
                                       Margin="{StaticResource StandardMarginAll}"
                                       Visibility="{Binding ComponentService.SelectedItem, Converter={StaticResource _editingStyleConverter}, ConverterParameter={x:Static frameworkWrappers:ComponentEditingStyle.Translation}}"
                                       ToolTip="Translation Gizmo" />

            <controls:IconToggleButton IsToggled="{Binding MonoGameService.EditingStyle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource _equalityToBoolConverter}, ConverterParameter={x:Static frameworkWrappers:ComponentEditingStyle.Scale}}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.Square}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.SquareOutline}"
                                       IsHitTestVisible="{Binding IsToggled, RelativeSource={RelativeSource Self}, Converter={StaticResource _inverseBoolConverter}}"
                                       Margin="{StaticResource StandardMarginAll}"
                                       Visibility="{Binding ComponentService.SelectedItem, Converter={StaticResource _editingStyleConverter}, ConverterParameter={x:Static frameworkWrappers:ComponentEditingStyle.Scale}}"
                                       ToolTip="Scale Gizmo" />

            <controls:IconToggleButton IsToggled="{Binding MonoGameService.EditingStyle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource _equalityToBoolConverter}, ConverterParameter={x:Static frameworkWrappers:ComponentEditingStyle.Rotation}}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.Circle}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.CircleOutline}"
                                       IsHitTestVisible="{Binding IsToggled, RelativeSource={RelativeSource Self}, Converter={StaticResource _inverseBoolConverter}}"
                                       Margin="{StaticResource StandardMarginAll}"
                                       Visibility="{Binding ComponentService.SelectedItem, Converter={StaticResource _editingStyleConverter}, ConverterParameter={x:Static frameworkWrappers:ComponentEditingStyle.Rotation}}"
                                       ToolTip="Rotation Gizmo" />

            <controls:IconToggleButton IsToggled="{Binding MonoGameService.EditingStyle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource _equalityToBoolConverter}, ConverterParameter={x:Static frameworkWrappers:ComponentEditingStyle.Tile}}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.ViewGrid}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.GridLarge}"
                                       IsHitTestVisible="{Binding IsToggled, RelativeSource={RelativeSource Self}, Converter={StaticResource _inverseBoolConverter}}"
                                       Margin="{StaticResource StandardMarginAll}"
                                       Visibility="{Binding ComponentService.SelectedItem, Converter={StaticResource _editingStyleConverter}, ConverterParameter={x:Static frameworkWrappers:ComponentEditingStyle.Tile}}"
                                       ToolTip="Tile Gizmo" />

            <controls:IconToggleButton IsToggled="{Binding MonoGameService.EditingStyle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource _equalityToBoolConverter}, ConverterParameter={x:Static frameworkWrappers:ComponentEditingStyle.None}}"
                                       IsToggledKind="{x:Static iconPacks:PackIconMaterialKind.EyeOff}"
                                       IsNotToggledKind="{x:Static iconPacks:PackIconMaterialKind.EyeOffOutline}"
                                       IsHitTestVisible="{Binding IsToggled, RelativeSource={RelativeSource Self}, Converter={StaticResource _inverseBoolConverter}}"
                                       Margin="{StaticResource StandardMarginAll}"
                                       ToolTip="Hides all gizmos." />

            <Separator HorizontalAlignment="Center"
                       VerticalAlignment="Stretch" />

            <valueEditors:ColorEditor Title="Background"
                                      ToolTip="Change the current scene's background color."
                                      Width="200"
                                      Value="{Binding SceneService.CurrentScene.BackgroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Separator HorizontalAlignment="Center"
                       VerticalAlignment="Stretch" />

            <TextBlock FontWeight="Bold"
                       Margin="{StaticResource DoubleMarginL}"
                       VerticalAlignment="Center"
                       Text="View Size:" />

            <TextBlock Margin="{StaticResource StandardMarginAll}"
                       VerticalAlignment="Center">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}{0:#,#.00} x {1:#,#.00}">
                        <Binding Path="StatusService.ViewWidth" />
                        <Binding Path="StatusService.ViewHeight" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <TextBlock FontWeight="Bold"
                       Margin="{StaticResource DoubleMarginL}"
                       VerticalAlignment="Center"
                       Text="Grid Unit Size" />

            <TextBlock Margin="{StaticResource StandardMarginAll}"
                       VerticalAlignment="Center">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}{0:#,#.00} - {1:#,#.00}">
                        <Binding Path="StatusService.PrimaryGridSize" />
                        <Binding Path="StatusService.SecondaryGridSize" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </StackPanel>

        <ContentControl Grid.Row="1"
                        Content="{Binding MonoGameService.EditorGame}" />
    </Grid>
</UserControl>
namespace Macabre2D.UI.Services {

    using System.Text;

    public sealed class GitIgnoreCreator : TextCreator {

        public GitIgnoreCreator() {
            // This class could be static right now, but I'm open to the possibility of customizing
            // the git ignore at a later date, so I'm leaving it open to that.
        }

        public override string Create() {
            var stringBuilder = new StringBuilder();
            stringBuilder.AppendLine(@"## Ignore Visual Studio temporary files, build results, and");
            stringBuilder.AppendLine(@"## files generated by popular Visual Studio add-ons.");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"# User-specific files");
            stringBuilder.AppendLine(@"*.suo");
            stringBuilder.AppendLine(@"*.user");
            stringBuilder.AppendLine(@"*.userosscache");
            stringBuilder.AppendLine(@"*.sln.docstates");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"# User-specific files (MonoDevelop/Xamarin Studio)");
            stringBuilder.AppendLine(@"*.userprefs");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"# Build results");
            stringBuilder.AppendLine(@"[Dd]ebug/");
            stringBuilder.AppendLine(@"[Dd]ebugPublic/");
            stringBuilder.AppendLine(@"[Rr]elease/");
            stringBuilder.AppendLine(@"[Rr]eleases/");
            stringBuilder.AppendLine(@"x64/");
            stringBuilder.AppendLine(@"x86/");
            stringBuilder.AppendLine(@"bld/");
            stringBuilder.AppendLine(@"[Bb]in/");
            stringBuilder.AppendLine(@"[Oo]bj/");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"# Visual Studio 2015 cache/options directory");
            stringBuilder.AppendLine(@".vs/");
            stringBuilder.AppendLine(@"# Uncomment if you have tasks that create the project's static files in wwwroot");
            stringBuilder.AppendLine(@"#wwwroot/");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"# MSTest test Results");
            stringBuilder.AppendLine(@"[Tt]est[Rr]esult*/");
            stringBuilder.AppendLine(@"[Bb]uild[Ll]og.*");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"# NUNIT");
            stringBuilder.AppendLine(@"*.VisualState.xml");
            stringBuilder.AppendLine(@"TestResult.xml");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"*_i.c");
            stringBuilder.AppendLine(@"*_p.c");
            stringBuilder.AppendLine(@"*_i.h");
            stringBuilder.AppendLine(@"*.ilk");
            stringBuilder.AppendLine(@"*.meta");
            stringBuilder.AppendLine(@"*.obj");
            stringBuilder.AppendLine(@"*.pch");
            stringBuilder.AppendLine(@"*.pdb");
            stringBuilder.AppendLine(@"*.pgc");
            stringBuilder.AppendLine(@"*.pgd");
            stringBuilder.AppendLine(@"*.rsp");
            stringBuilder.AppendLine(@"*.sbr");
            stringBuilder.AppendLine(@"*.tlb");
            stringBuilder.AppendLine(@"*.tli");
            stringBuilder.AppendLine(@"*.tlh");
            stringBuilder.AppendLine(@"*.tmp");
            stringBuilder.AppendLine(@"*.tmp_proj");
            stringBuilder.AppendLine(@"*.log");
            stringBuilder.AppendLine(@"*.vspscc");
            stringBuilder.AppendLine(@"*.vssscc");
            stringBuilder.AppendLine(@".builds");
            stringBuilder.AppendLine(@"*.pidb");
            stringBuilder.AppendLine(@"*.svclog");
            stringBuilder.AppendLine(@"*.scc");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"# Visual Studio profiler");
            stringBuilder.AppendLine(@"*.psess");
            stringBuilder.AppendLine(@"*.vsp");
            stringBuilder.AppendLine(@"*.vspx");
            stringBuilder.AppendLine(@"*.sap");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"# NuGet Packages");
            stringBuilder.AppendLine(@"*.nupkg");
            stringBuilder.AppendLine(@"# The packages folder can be ignored because of Package Restore");
            stringBuilder.AppendLine(@"**/packages/*");
            stringBuilder.AppendLine(@"# except build/, which is used as an MSBuild target.");
            stringBuilder.AppendLine(@"!**/packages/build/");
            stringBuilder.AppendLine(@"# Uncomment if necessary however generally it will be regenerated when needed");
            stringBuilder.AppendLine(@"#!**/packages/repositories.config");
            stringBuilder.AppendLine(@"# NuGet v3's project.json files produces more ignoreable files");
            stringBuilder.AppendLine(@"*.nuget.props");
            stringBuilder.AppendLine(@"*.nuget.targets");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"# Visual Studio cache files");
            stringBuilder.AppendLine(@"# files ending in .cache can be ignored");
            stringBuilder.AppendLine(@"*.[Cc]ache");
            stringBuilder.AppendLine(@"# but keep track of directories ending in .cache");
            stringBuilder.AppendLine(@"!*.[Cc]ache/");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"# GhostDoc plugin setting file");
            stringBuilder.AppendLine(@"*.GhostDoc.xml");
            stringBuilder.AppendLine(@"");
            stringBuilder.AppendLine(@"#Mac");
            stringBuilder.AppendLine(@".DS_Store");
            stringBuilder.AppendLine(@".AppleDouble");
            stringBuilder.AppendLine(@".LSOverride");
            return stringBuilder.ToString();
        }
    }
}
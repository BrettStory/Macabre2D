//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Macabre2D.Engine.Windows.Resources.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Macabre2D.Engine.Windows.Resources.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Default shader based on http://rbwhitaker.wikidot.com/post-processing-effects
        ///// Also a fantastic source of MonoGame/XNA tutorials
        ///
        ///texture ScreenTexture;
        ///
        ///sampler TextureSampler = sampler_state
        ///{
        ///	Texture = &lt;ScreenTexture&gt;;
        ///};
        ///
        ///float4 PixelShaderFunction(float2 TextureCoordinate : TEXCOORD0) : COLOR0
        ///{
        ///	float4 color = tex2D(TextureSampler, TextureCoordinate);
        ///	return color;
        ///}
        ///
        ///technique Plain
        ///{
        ///	pass Pass1
        ///	{
        ///		PixelShader = compile ps_2_0 PixelShaderFunction();
        ///	}
        ///}.
        /// </summary>
        public static string DefaultShader {
            get {
                return ResourceManager.GetString("DefaultShader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;XnaContent xmlns:Graphics=&quot;Microsoft.Xna.Framework.Content.Pipeline.Graphics&quot;&gt;
        ///  &lt;Asset Type=&quot;Graphics:FontDescription&quot;&gt;
        ///    &lt;FontName&gt;Arial&lt;/FontName&gt;
        ///    &lt;Size&gt;12&lt;/Size&gt;
        ///    &lt;Spacing&gt;0&lt;/Spacing&gt;
        ///    &lt;UseKerning&gt;true&lt;/UseKerning&gt;
        ///    &lt;Style&gt;Regular&lt;/Style&gt;
        ///    &lt;DefaultCharacter&gt;*&lt;/DefaultCharacter&gt;
        ///    &lt;CharacterRegions&gt;
        ///      &lt;CharacterRegion&gt;
        ///        &lt;Start&gt;&amp;#32;&lt;/Start&gt;
        ///        &lt;End&gt;&amp;#126;&lt;/End&gt;
        ///      &lt;/CharacterRegion&gt;
        ///    &lt;/CharacterRegions&gt;
        ///  &lt;/A [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DefaultSpriteFont {
            get {
                return ResourceManager.GetString("DefaultSpriteFont", resourceCulture);
            }
        }
    }
}
